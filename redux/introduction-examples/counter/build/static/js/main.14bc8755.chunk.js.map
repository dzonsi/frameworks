{"version":3,"sources":["components/Counter.js","index.js","reducers/index.js"],"names":["Counter","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","incrementAsync","bind","assertThisInitialized","incrementIfOdd","value","onIncrement","setTimeout","_this$props","onDecrement","react_default","a","createElement","onClick","Component","store","createStore","state","arguments","length","undefined","type","rootEl","document","getElementById","render","ReactDOM","components_Counter","getState","dispatch","subscribe"],"mappings":"2NAoDeA,cAhDd,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAClBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,eAAiBP,EAAKO,eAAeC,KAApBP,OAAAQ,EAAA,EAAAR,CAAAD,IACtBA,EAAKU,eAAiBV,EAAKU,eAAeF,KAApBP,OAAAQ,EAAA,EAAAR,CAAAD,IAHJA,gFAOfG,KAAKJ,MAAMY,MAAQ,IAAM,GAC3BR,KAAKJ,MAAMa,uDAKZC,WAAWV,KAAKJ,MAAMa,YAAa,sCAG3B,IAAAE,EACoCX,KAAKJ,MAAzCY,EADAG,EACAH,MAAOC,EADPE,EACOF,YAAaG,EADpBD,EACoBC,YAC5B,OACCC,EAAAC,EAAAC,cAAA,qBACWP,EADX,SAEE,IACDK,EAAAC,EAAAC,cAAA,UAAQC,QAASP,GAAjB,KAGC,IACDI,EAAAC,EAAAC,cAAA,UAAQC,QAASJ,GAAjB,KAGC,IACDC,EAAAC,EAAAC,cAAA,UAAQC,QAAShB,KAAKO,gBAAtB,oBAGC,IACDM,EAAAC,EAAAC,cAAA,UAAQC,QAAShB,KAAKI,gBAAtB,2BAnCkBa,aCGhBC,EAAQC,YCNC,WAAuB,IAAtBC,EAAsBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAd,EACvB,QADqCA,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GACtBC,MACd,IAAK,YACJ,OAAOJ,EAAQ,EAChB,IAAK,YACJ,OAAOA,EAAQ,EAChB,QACC,OAAOA,KDAJK,EAASC,SAASC,eAAe,QAEjCC,EAAS,kBAAMC,IAASD,OAC5Bf,EAAAC,EAAAC,cAACe,EAAD,CACEtB,MAAOU,EAAMa,WACbtB,YAAa,kBAAMS,EAAMc,SAAS,CAAER,KAAM,eAC1CZ,YAAa,kBAAMM,EAAMc,SAAS,CAAER,KAAM,iBAE5CC,IAGFG,IACAV,EAAMe,UAAUL","file":"static/js/main.14bc8755.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Counter extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.incrementAsync = this.incrementAsync.bind(this);\r\n\t\tthis.incrementIfOdd = this.incrementIfOdd.bind(this);\r\n\t}\r\n\r\n\tincrementIfOdd() {\r\n\t\tif(this.props.value % 2 !== 0) {\r\n\t\t\tthis.props.onIncrement();\r\n\t\t}\r\n\t}\r\n\r\n\tincrementAsync() {\r\n\t\tsetTimeout(this.props.onIncrement, 1000);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { value, onIncrement, onDecrement } = this.props;\r\n\t\treturn (\r\n\t\t\t<p>\r\n\t\t\t\tClicked: {value} times\r\n\t\t\t\t{' '}\r\n\t\t\t\t<button onClick={onIncrement}>\r\n\t\t\t\t\t+\r\n\t\t\t\t</button>\r\n\t\t\t\t{' '}\r\n\t\t\t\t<button onClick={onDecrement}>\r\n\t\t\t\t\t-\r\n\t\t\t\t</button>\r\n\t\t\t\t{' '}\r\n\t\t\t\t<button onClick={this.incrementIfOdd}>\r\n\t\t\t\t\tIncrement if odd\r\n\t\t\t\t</button>\r\n\t\t\t\t{' '}\r\n\t\t\t\t<button onClick={this.incrementAsync}>\r\n\t\t\t\t\tIncrement async\r\n\t\t\t\t</button>\r\n\t\t\t</p>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nCounter.propTypes = {\r\n\tvalue: PropTypes.number.isRequired,\r\n\tonIncrement: PropTypes.func.isRequired,\r\n\tonDecrement: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Counter;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore } from 'redux';\r\nimport Counter from './components/Counter';\r\nimport counter from './reducers';\r\n\r\nconst store = createStore(counter);\r\nconst rootEl = document.getElementById('root');\r\n\r\nconst render = () => ReactDOM.render(\r\n  <Counter\r\n    value={store.getState()}\r\n    onIncrement={() => store.dispatch({ type: 'INCREMENT' })}\r\n    onDecrement={() => store.dispatch({ type: 'DECREMENT' })}\r\n  />,\r\n  rootEl\r\n)\r\n\r\nrender();\r\nstore.subscribe(render);","export default (state = 0, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase \"INCREMENT\":\r\n\t\t\treturn state + 1\r\n\t\tcase \"DECREMENT\":\r\n\t\t return state - 1\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}"],"sourceRoot":""}