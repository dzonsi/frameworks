{"id":"index.html","dependencies":[{"name":"C:\\Users\\Nikola\\Desktop\\frameworks\\redux\\introduction-examples\\counter-vanilla\\package.json","includedInParent":true,"mtime":1559723598502}],"generated":{"html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n\t<meta charset=\"utf-8\">\r\n\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n\t<title>Counter vanilla</title>\r\n\t<script src=\"https://unpkg.com/redux@latest/dist/redux.min.js\"></script>\r\n</head>\r\n<body>\r\n\t<div id=\"first\">\r\n\t\t<p>\r\n\t\t\tClicked: <span id=\"value\">0</span> times\r\n\t\t\t<button id=\"increment\">+</button>\r\n\t\t\t<button id=\"decrement\">-</button>\r\n\t\t\t<button id=\"incrementIfOdd\">Increment if odd</button>\r\n\t\t\t<button id=\"incrementAsync\">Increment async</button>\r\n\t\t</p>\r\n\t</div>\r\n\r\n\t<script>function counter(state, action) {\n  if (typeof state === \"undefined\") {\n    return 0;\n  }\n\n  switch (action.type) {\n    case \"INCREMENT\":\n      return state + 1;\n\n    case \"DECREMENT\":\n      return state - 1;\n\n    default:\n      return state;\n  }\n}\n\nvar store = Redux.createStore(counter);\nvar valueEl = document.getElementById('value'); // helper function for inserting element after target element\n\nfunction insertAfter(newNode, referenceNode) {\n  referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\n} // nece da radi, ali radi u funkciji\n// TypeError: referenceNode.parentNode is null\n\n\n(function container() {\n  var container = document.createElement(\"div\");\n  var h1 = document.createElement(\"h1\");\n  h1.id = \"my-container\";\n  h1.innerHTML = \"You clicked <span id='special'></span> times!\";\n  container.appendChild(h1);\n  var first = document.getElementById(\"first\");\n  first.parentNode.insertBefore(container, first.nextSibling);\n})();\n\nvar myValueEl = document.getElementById(\"special\");\n\nfunction render() {\n  valueEl.innerHTML = store.getState().toString();\n}\n\nfunction myRender() {\n  myValueEl.innerHTML = store.getState().toString();\n}\n\nrender();\nmyRender();\nstore.subscribe(render);\nstore.subscribe(myRender);\ndocument.getElementById(\"increment\").addEventListener(\"click\", function () {\n  store.dispatch({\n    type: \"INCREMENT\"\n  });\n});\ndocument.getElementById(\"decrement\").addEventListener(\"click\", function () {\n  store.dispatch({\n    type: \"DECREMENT\"\n  });\n});\ndocument.getElementById(\"incrementIfOdd\").addEventListener(\"click\", function () {\n  if (store.getState() % 2 !== 0) {\n    store.dispatch({\n      type: \"INCREMENT\"\n    });\n  }\n});\ndocument.getElementById(\"incrementAsync\").addEventListener(\"click\", function () {\n  setTimeout(function () {\n    store.dispatch({\n      type: \"INCREMENT\"\n    });\n  }, 1000);\n});</script>\r\n</body>\r\n</html>"},"sourceMaps":null,"error":null,"hash":"a2bd4c70d1d27237697d63c9896bfd76","cacheData":{"env":{}}}